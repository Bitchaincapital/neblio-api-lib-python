# coding: utf-8

"""
    Neblio REST API Suite

    APIs for Interacting with NTP1 Tokens & The Neblio Blockchain  # noqa: E501

    OpenAPI spec version: 1.2.4
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class GetAddressResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'addr_str': 'str',
        'balance': 'float',
        'balance_sat': 'float',
        'total_received': 'float',
        'total_received_sat': 'float',
        'total_sent': 'float',
        'total_sent_sat': 'float',
        'unconfirmed_balance': 'float',
        'unconfirmed_balance_sat': 'float',
        'unconfirmed_tx_appearances': 'float',
        'tx_appearances': 'float',
        'transactions': 'list[str]'
    }

    attribute_map = {
        'addr_str': 'addrStr',
        'balance': 'balance',
        'balance_sat': 'balanceSat',
        'total_received': 'totalReceived',
        'total_received_sat': 'totalReceivedSat',
        'total_sent': 'totalSent',
        'total_sent_sat': 'totalSentSat',
        'unconfirmed_balance': 'unconfirmedBalance',
        'unconfirmed_balance_sat': 'unconfirmedBalanceSat',
        'unconfirmed_tx_appearances': 'unconfirmedTxAppearances',
        'tx_appearances': 'txAppearances',
        'transactions': 'transactions'
    }

    def __init__(self, addr_str=None, balance=None, balance_sat=None, total_received=None, total_received_sat=None, total_sent=None, total_sent_sat=None, unconfirmed_balance=None, unconfirmed_balance_sat=None, unconfirmed_tx_appearances=None, tx_appearances=None, transactions=None):  # noqa: E501
        """GetAddressResponse - a model defined in OpenAPI"""  # noqa: E501

        self._addr_str = None
        self._balance = None
        self._balance_sat = None
        self._total_received = None
        self._total_received_sat = None
        self._total_sent = None
        self._total_sent_sat = None
        self._unconfirmed_balance = None
        self._unconfirmed_balance_sat = None
        self._unconfirmed_tx_appearances = None
        self._tx_appearances = None
        self._transactions = None
        self.discriminator = None

        if addr_str is not None:
            self.addr_str = addr_str
        if balance is not None:
            self.balance = balance
        if balance_sat is not None:
            self.balance_sat = balance_sat
        if total_received is not None:
            self.total_received = total_received
        if total_received_sat is not None:
            self.total_received_sat = total_received_sat
        if total_sent is not None:
            self.total_sent = total_sent
        if total_sent_sat is not None:
            self.total_sent_sat = total_sent_sat
        if unconfirmed_balance is not None:
            self.unconfirmed_balance = unconfirmed_balance
        if unconfirmed_balance_sat is not None:
            self.unconfirmed_balance_sat = unconfirmed_balance_sat
        if unconfirmed_tx_appearances is not None:
            self.unconfirmed_tx_appearances = unconfirmed_tx_appearances
        if tx_appearances is not None:
            self.tx_appearances = tx_appearances
        if transactions is not None:
            self.transactions = transactions

    @property
    def addr_str(self):
        """Gets the addr_str of this GetAddressResponse.  # noqa: E501

        Address in string form  # noqa: E501

        :return: The addr_str of this GetAddressResponse.  # noqa: E501
        :rtype: str
        """
        return self._addr_str

    @addr_str.setter
    def addr_str(self, addr_str):
        """Sets the addr_str of this GetAddressResponse.

        Address in string form  # noqa: E501

        :param addr_str: The addr_str of this GetAddressResponse.  # noqa: E501
        :type: str
        """

        self._addr_str = addr_str

    @property
    def balance(self):
        """Gets the balance of this GetAddressResponse.  # noqa: E501

        NEBL balance  # noqa: E501

        :return: The balance of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this GetAddressResponse.

        NEBL balance  # noqa: E501

        :param balance: The balance of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._balance = balance

    @property
    def balance_sat(self):
        """Gets the balance_sat of this GetAddressResponse.  # noqa: E501

        NEBL balance in satoshis  # noqa: E501

        :return: The balance_sat of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._balance_sat

    @balance_sat.setter
    def balance_sat(self, balance_sat):
        """Sets the balance_sat of this GetAddressResponse.

        NEBL balance in satoshis  # noqa: E501

        :param balance_sat: The balance_sat of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._balance_sat = balance_sat

    @property
    def total_received(self):
        """Gets the total_received of this GetAddressResponse.  # noqa: E501

        Total NEBL received  # noqa: E501

        :return: The total_received of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_received

    @total_received.setter
    def total_received(self, total_received):
        """Sets the total_received of this GetAddressResponse.

        Total NEBL received  # noqa: E501

        :param total_received: The total_received of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._total_received = total_received

    @property
    def total_received_sat(self):
        """Gets the total_received_sat of this GetAddressResponse.  # noqa: E501

        Total NEBL received in satoshis  # noqa: E501

        :return: The total_received_sat of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_received_sat

    @total_received_sat.setter
    def total_received_sat(self, total_received_sat):
        """Sets the total_received_sat of this GetAddressResponse.

        Total NEBL received in satoshis  # noqa: E501

        :param total_received_sat: The total_received_sat of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._total_received_sat = total_received_sat

    @property
    def total_sent(self):
        """Gets the total_sent of this GetAddressResponse.  # noqa: E501

        Total NEBL sent  # noqa: E501

        :return: The total_sent of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_sent

    @total_sent.setter
    def total_sent(self, total_sent):
        """Sets the total_sent of this GetAddressResponse.

        Total NEBL sent  # noqa: E501

        :param total_sent: The total_sent of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._total_sent = total_sent

    @property
    def total_sent_sat(self):
        """Gets the total_sent_sat of this GetAddressResponse.  # noqa: E501

        Total NEBL sent satoshis  # noqa: E501

        :return: The total_sent_sat of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_sent_sat

    @total_sent_sat.setter
    def total_sent_sat(self, total_sent_sat):
        """Sets the total_sent_sat of this GetAddressResponse.

        Total NEBL sent satoshis  # noqa: E501

        :param total_sent_sat: The total_sent_sat of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._total_sent_sat = total_sent_sat

    @property
    def unconfirmed_balance(self):
        """Gets the unconfirmed_balance of this GetAddressResponse.  # noqa: E501

        Unconfirmed NEBL balance  # noqa: E501

        :return: The unconfirmed_balance of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._unconfirmed_balance

    @unconfirmed_balance.setter
    def unconfirmed_balance(self, unconfirmed_balance):
        """Sets the unconfirmed_balance of this GetAddressResponse.

        Unconfirmed NEBL balance  # noqa: E501

        :param unconfirmed_balance: The unconfirmed_balance of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._unconfirmed_balance = unconfirmed_balance

    @property
    def unconfirmed_balance_sat(self):
        """Gets the unconfirmed_balance_sat of this GetAddressResponse.  # noqa: E501

        Unconfirmed NEBL balance in satoshis  # noqa: E501

        :return: The unconfirmed_balance_sat of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._unconfirmed_balance_sat

    @unconfirmed_balance_sat.setter
    def unconfirmed_balance_sat(self, unconfirmed_balance_sat):
        """Sets the unconfirmed_balance_sat of this GetAddressResponse.

        Unconfirmed NEBL balance in satoshis  # noqa: E501

        :param unconfirmed_balance_sat: The unconfirmed_balance_sat of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._unconfirmed_balance_sat = unconfirmed_balance_sat

    @property
    def unconfirmed_tx_appearances(self):
        """Gets the unconfirmed_tx_appearances of this GetAddressResponse.  # noqa: E501

        Number of unconfirmed transactions for this address  # noqa: E501

        :return: The unconfirmed_tx_appearances of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._unconfirmed_tx_appearances

    @unconfirmed_tx_appearances.setter
    def unconfirmed_tx_appearances(self, unconfirmed_tx_appearances):
        """Sets the unconfirmed_tx_appearances of this GetAddressResponse.

        Number of unconfirmed transactions for this address  # noqa: E501

        :param unconfirmed_tx_appearances: The unconfirmed_tx_appearances of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._unconfirmed_tx_appearances = unconfirmed_tx_appearances

    @property
    def tx_appearances(self):
        """Gets the tx_appearances of this GetAddressResponse.  # noqa: E501

        Number of transactions for this address  # noqa: E501

        :return: The tx_appearances of this GetAddressResponse.  # noqa: E501
        :rtype: float
        """
        return self._tx_appearances

    @tx_appearances.setter
    def tx_appearances(self, tx_appearances):
        """Sets the tx_appearances of this GetAddressResponse.

        Number of transactions for this address  # noqa: E501

        :param tx_appearances: The tx_appearances of this GetAddressResponse.  # noqa: E501
        :type: float
        """

        self._tx_appearances = tx_appearances

    @property
    def transactions(self):
        """Gets the transactions of this GetAddressResponse.  # noqa: E501

        Array of transaction ids for this address  # noqa: E501

        :return: The transactions of this GetAddressResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this GetAddressResponse.

        Array of transaction ids for this address  # noqa: E501

        :param transactions: The transactions of this GetAddressResponse.  # noqa: E501
        :type: list[str]
        """

        self._transactions = transactions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetAddressResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
